FILE: basic.kt
    public final fun stringF(): R|kotlin/String| {
        ^stringF String()
    }
    public final fun R|kotlin/Any|.consume(): R|kotlin/Unit| {
        ^consume Q|kotlin/Unit|
    }
    public final fun returnsExp(): R|kotlin/String| {
        ^returnsExp R|/stringF|()
    }
    public final fun returnsBody(): R|kotlin/String| {
        ^returnsBody R|/stringF|()
    }
    public final fun vals(): R|kotlin/Unit| {
        lval used: R|kotlin/String|
        R|<local>/used| = R|/stringF|()
        lateinit lvar used2: R|kotlin/String|
        R|<local>/used2| = R|/stringF|()
    }
    public final class Inits : R|kotlin/Any| {
        public constructor(): R|Inits| {
            super<R|kotlin/Any|>()
        }

        public final val init1: R|kotlin/String| = R|/stringF|()
            public get(): R|kotlin/String|

        public final val explicit: R|kotlin/String|
            public get(): R|kotlin/String| {
                ^ R|/stringF|()
            }

        public final val unused: R|kotlin/String|
            public get(): R|kotlin/String| {
                R|/stringF|()
                ^ String()
            }

    }
    public final fun defaultValue(param: R|kotlin/String| = R|/stringF|()): R|kotlin/Unit| {
    }
    public final fun basic(): R|kotlin/Unit| {
        lval used: R|kotlin/String| = R|/stringF|()
        R|kotlin/io/println|(R|/stringF|())
        R|/stringF|()
    }
    public final fun stringConcat(): R|kotlin/String| {
        String(42)
        lval x: R|kotlin/String| = String(42)
        <strcat>(String(answer is ), R|<local>/x|)
        lval y: R|kotlin/String| = <strcat>(String(answer is ), R|<local>/x|)
        ^stringConcat <strcat>(String(answer is ), R|<local>/y|)
    }
    public final fun throws(): R|kotlin/Nothing| {
        R|java/lang/IllegalStateException.IllegalStateException|()
        throw R|java/lang/IllegalStateException.IllegalStateException|()
    }
    public final fun createE(): R|{kotlin/IllegalStateException=} java/lang/IllegalStateException| {
        ^createE R|java/lang/IllegalStateException.IllegalStateException|()
    }
    public final fun throws2(): R|kotlin/Unit| {
        R|/createE|()
        throw R|/createE|()
    }
    public final fun usesNothing(): R|kotlin/Unit| {
        R|/throws|()
    }
    public final fun arrays(): R|kotlin/Unit| {
        lval a: R|kotlin/IntArray| = R|kotlin/intArrayOf|(vararg(Int(1), Int(2), Int(3)))
        R|kotlin/arrayOf|<R|kotlin/Int|>(vararg(Int(1), Int(2)))
    }
